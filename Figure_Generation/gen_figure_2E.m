function [ ] = gen_figure_2E( )

addpath(genpath('Plotting Utilities/'))
addpath('Simulation Functions/')

% Get colors for the plot from brewermap
cm = brewermap(4,'Reds');

% Specify where the data can be found; the data for this figure
% is generated by the C++ program
data_directory = '../Data_Storage/Figure_2E/';

% Write the parameters that were used
n = 10000;                              % Simulations
m_arr = logspace(-5, log10(0.5), 51)';  % Migration rates
esc_pop_arr = (1:4)';                   % Populations invaded

% Load the data from the files
prob_arr = zeros(4,length(m_arr));
for i = 0:50
    try
        vec = load([data_directory 'data_index_' num2str(i) '.csv']);
        prob_arr(:,i+1) = vec;
    catch
        prob_arr(:,i+1) = zeros(4,1);
    end
end

% Make the figure
close all
figure('position',[856   413   306   222]);
leg_arr = zeros(4,1);
for i = 1:length(esc_pop_arr)
    if i == 1; hold on; end
    leg_arr(i) = plot(m_arr, prob_arr(i,:), '.-','color', cm(i,:));
    
    for j = 1:length(m_arr)
        val = prob_arr(i,j);
        st_er = sqrt(val*(1-val)/n);
        plot([m_arr(j), m_arr(j)], [val-st_er, val+st_er], ...
            'color', cm(i,:));
    end
    
end
set(gca,'xscale','log')
set(gca,'position',[ 0.1088    0.1628    0.6484    0.7622])
set(gca,'tickdir','out')
xlim([min(m_arr), max(m_arr)])
axis square
set(gca,'xtick',[1e-5, 1e-4, 1e-3, 1e-2, 1e-1])
xlabel('Migration rate')
set(gca,'ticklength',[.02,.02])
ylabel('Probability')
legend(leg_arr,{'1 population','2 populations','3 populations','4 populations'})

end